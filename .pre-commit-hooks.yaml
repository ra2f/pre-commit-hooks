---

# This file tells https://pre-commit.com/
# which hooks are provided by this repo
# for use by other git repos.

# - id: the id of the hook - used in pre-commit-config.yaml.
# # Description
#   name: 'the name of the hook, shown during hook execution.'
#   description: description of the hook. used for metadata purposes only.
# # Installation
#   language: the language of the hook, tells pre-commit
#   how to install the hook.
#   language_version: overrides language version.
# # Scope
#   files: the pattern of files to run on.
#   exclude: exclude files that were matched by files
#   types: list of file types to run on.
#   exclude_types: exclude files that were matched by types.
#   always_run: if true this hook will run even if there are no matching files.
# # Output
#   verbose: if true, forces the output of the hook to be printed.
# # Misc
#   minimum_pre_commit_version: indicate a minimum compatible
#   pre-commit version.
#   require_serial: if true, run using a single process.
# # Action
#   entry: the entry point - the executable to run.
#   pass_filenames: if false no arguments will be passed to the hook.
#   args: list of additional parameters to pass to the hook.

#  Template
# - id:
#   name:
#   description:
#   language:
#   additional_dependencies:
#   files:
#   exclude:
#   types:
#   exclude_types:
#   always_run:
#   entry:
#   pass_filenames:
#   args:

#########
#########
## Git ##
#########
#########

- id: git-check-mailmap
  name: '[Git] Check mailmap'
  description: >
    Detect if an email address needs to be added to mailmap
  language: python
  exclude: .*  # Otherwise runs once per file.
  always_run: true
  entry: git-check-mailmap

- id: git-forbid-binary
  name: '[Git] Forbid binaries'
  description: Forbid binary files from being committed
  entry: pre_commit_hooks/git-forbid-binary
  language: script
  types: ['binary']

- id: git-check
  name: Check for conflict markers and core.whitespace errors
  # yamllint disable-line rule:line-length
  description: Use git to check for conflict markers and core.whitespace errors, respecting .gitattributes
  entry: pre_commit_hooks/git-check
  language: script

- id: git-dirty
  name: '[Git] Check if the git tree is dirty'
  description: Detect if git tree contains modified, staged, or untracked files
  entry: pre_commit_hooks/git-dirty
  language: script

- id: git-check-added-large-files
  name: '[Git] Forbid large files'
  description: >
    Prevent giant files from being committed
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  entry: git-check-added-large-files
  args:
    - --maxkb=500

- id: git-check-merge-conflict
  name: '[Git] Forbid merge conflicts'
  description: >
    Check for files that contain merge conflict strings.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: git-check-merge-conflict

- id: git-commit-msg
  name: '[Git] Check the commit message formatting'
  description: >
    Make sure the commit messages matches the expected format.
  language: python
  always_run: true
  entry: git-commit-msg
  stages:
    - commit-msg

#############
#############
## Generic ##
#############
#############

- id: generic-check-byte-order-marker
  name: '[Generic] Forbid byte-order marker'
  description: >
    Forbid files which have a UTF-8 byte-order marker
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-check-byte-order-marker

- id: generic-check-case-conflict
  name: '[Generic] Forbid for case conflicts'
  description: >
    Check for files that would conflict in case-insensitive filesystems
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: generic-check-case-conflict

- id: generic-check-executables-have-shebangs
  name: '[Generic] Ensure shebangs for exec files'
  description: >
    Ensures that (non-binary) executables have a shebang.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
    - executable
  entry: generic-check-executables-have-shebangs

- id: generic-check-symlinks
  name: '[Generic] Forbid broken symlinks'
  description: >
    Checks for symlinks which do not point to anything.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - symlink
  entry: generic-check-symlinks

- id: generic-check-vcs-permalinks
  name: '[Generic] Ensure vcs permalinks'
  description: >
    Ensures that links to vcs websites are permalinks.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-check-vcs-permalinks

- id: generic-detect-private-key
  name: '[Generic] Forbid private keys'
  description: >
    Detects the presence of private keys
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-detect-private-key

- id: generic-end-of-file-fixer
  name: '[Generic] Fix end-of-files'
  description: >
    Ensures that a file is either empty, or ends with one newline.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-end-of-file-fixer

- id: generic-trailing-whitespace-fixer
  name: '[Generic] Trim trailing whitespace'
  description: >
    This hook trims trailing whitespace.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-trailing-whitespace-fixer

- id: generic-mixed-line-ending
  name: '[Generic] Format all end-lines with LF'
  description: >
    Format files containing CRLF/CR end-lines to LF
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-mixed-line-ending
  args:
    - --fix=lf

- id: generic-tabs-forbid
  name: '[Generic] Forbid tabs'
  description: >
    Forbid files containing tabs to be committed
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: python
  exclude: (.*Makefile.*|debian/rules(\.in)?|.git/COMMIT_EDITMSG)
  types:
    - text
  entry: generic-tabs-forbid

- id: generic-tabs-remove
  name: '[Generic] Remove tabs'
  description: >
    Replace tabs by whitespaces before committing
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: python
  exclude: (.*Makefile.*|debian/rules(\.in)?|.git/COMMIT_EDITMSG)
  types:
    - text
  entry: generic-tabs-remove
  args:
    - --whitespaces-count=4

- id: generic-nbsp-forbid
  name: '[Generic] Forbid nbsp U+00A0'
  description: >
    Detect unicode non-breaking space character U+00A0 aka M-BM-
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: perl -ne 'print if $m = /\xc2\xa0/; $t ||= $m; END{{exit $t}}'

- id: generic-nbsp-remove
  name: '[Generic] Remove nbsp U+00A0'
  description: >
    Remove unicode non-breaking space character U+00A0 aka M-BM-
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: >
    perl -pi* -e
    's/\xc2\xa0/ /g && ($t = 1) && print STDERR $_; END{{exit $t}}'

- id: generic-en-dashes-forbid
  name: '[Generic] Forbid en dashes U+2013'
  description: >
    Detect the EXTREMELY confusing unicode character U+2013
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: >
    perl -ne 'print if $m = /\xe2\x80\x93/; $t ||= $m; END{{exit $t}}'

- id: generic-en-dashes-remove
  name: '[Generic] Remove en dashes U+2013'
  description: >
    Remove the EXTREMELY confusing unicode character U+2013
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: >
    perl -pi* -e
    's/\xe2\x80\x93/-/g && ($t = 1) && print STDERR $_; END{{exit $t}}'


##########
##########
## JSON ##
##########
##########

- id: json-check-syntax
  name: '[Json] Check syntax'
  description: >
    This hook checks json files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - json
  entry: json-check-syntax

- id: json-pretty-format
  name: '[Json] Pretty format'
  description: >
    This hook sets a standard for formatting JSON files.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - json
  entry: json-pretty-format --autofix
  args:
    - --indent=2


############
############
## Python ##
############
############

- id: python-check-ast
  name: '[Python] Check python ast'
  description: >
    Simply check whether files parse as valid python.
  language: python
  types:
    - python
  entry: python-check-ast

- id: python-check-builtin-literals
  name: '[Python] Check builtin type constr use'
  description: >
    Require literal syntax when initializing empty or zero Python builtin types.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-check-builtin-literals

- id: python-check-docstring-first
  name: '[Python] Check docstring is first'
  description: >
    Checks a common error of defining a docstring after code.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-check-docstring-first

- id: python-debug-statements
  name: '[Python] Forbid debug statements'
  description: >
    Check for debugger imports and py37+ `breakpoint()` calls in python source.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-debug-statement-hook

- id: python-double-quote-string-fixer
  name: '[Python] Fix double quoted strings'
  description: >
    This hook replaces double quoted strings with single quoted strings
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-double-quote-string-fixer

- id: python-fix-encoding-pragma
  name: '[Python] Fix python encoding pragma'
  description: >
    Remove '# -*- coding: utf-8 -*-' from the top of python files
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-fix-encoding-pragma --remove

- id: python-requirements-txt-fixer
  name: '[Python] Fix requirements.txt'
  description: >
    Sorts entries in requirements.txt
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  files: requirements.*\.txt$
  entry: python-requirements-txt-fixer

- id: python-safetydb
  name: '[Python] Check requirements.txt safety'
  description: >
    Analyze your Python requirements for known security vulnerabilities.
    Origin: https://github.com/Lucas-C/pre-commit-hooks-safety
  language: python
  additional_dependencies:
    - safety
  files: requirements.*\.txt$
  entry: python-safety-checks

- id: python-pyupgrade
  name: '[Python] Upgrade syntax'
  description: >
    Run pyupgrade
    Origin: https://github.com/asottile/pyupgrade
  language: python
  additional_dependencies:
    - pyupgrade
  types:
    - python
  entry: pyupgrade

- id: python-isort-config
  name: '[Python] Demand isort config'
  description: >
    Demand the presence of .isort.cfg configuration file
  language: python
  types:
    - python
  always_run: true
  entry: python-isort-config
  pass_filenames: false

- id: python-isort-seed-config
  name: '[Python] Seed isort known_third_party'
  description: >
    Statically populate the known_third_party isort setting
    Origin: https://github.com/asottile/seed-isort-config
  language: python
  additional_dependencies:
    - seed-isort-config
  entry: seed-isort-config
  pass_filenames: false

- id: python-isort
  name: '[Python] Run isort'
  description: >
    Run isort formatter with black-compatible configuration
    Origin: https://github.com/timothycrosley/isort
  language: python
  additional_dependencies:
    - isort
  types:
    - python
  require_serial: true
  entry: isort
  args:
    - --multi-line=3
    - --trailing-comma
    - --force-grid-wrap=0
    - --use-parentheses
    - --line-width=100
    - --profile=black

- id: python-black
  name: '[Python] Run black'
  description: >
    Run Black formatter
    Origin: https://github.com/psf/black
  language: python
  additional_dependencies:
    - black
  types:
    - python
  require_serial: true
  entry: black
  args:
    - --line-length=100
    - --skip-string-normalization

- id: python-pylint-config
  name: '[Python] Demand pylint config'
  description: >
    Demand the presence of .pylintrc configuration file
  language: python
  types:
    - python
  always_run: true
  entry: python-pylint-config
  pass_filenames: false

- id: python-pylint
  name: '[Python] Run pylint'
  description: >
    Run pylint
    Origin: https://github.com/PyCQA/pylint
  language: python
  additional_dependencies:
    - pylint
  types:
    - python
  entry: pylint

- id: python-pydocstyle
  name: '[Python] Run pydocstyle'
  description: >
    Run pydocstyle
    Origin: https://github.com/PyCQA/pydocstyle
  language: python
  additional_dependencies:
    - pydocstyle
  types:
    - python
  entry: pydocstyle

- id: python-bandit
  name: '[Python] Run bandit'
  description: >
    Run bandit
    Origin: https://github.com/PyCQA/bandit
  language: python
  additional_dependencies:
    - bandit
  types:
    - python
  entry: bandit --skip=B404,B602,B603,B605,B606

- id: python-setup-cfg-fmt
  name: '[Python] Format setup.cfg'
  description: >
    Apply a consistent format to `setup.cfg` files
    Origin: https://github.com/asottile/setup-cfg-fmt
  language: python
  additional_dependencies:
    - setup-cfg-fmt
  files: '(^|/)setup\.cfg$'
  entry: setup-cfg-fmt

###########
###########
## Shell ##
###########
###########

- id: shell-check-syntax
  name: '[Shell] Check syntax correctness'
  description: >
    Check Shell scripts syntax correctness
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - shell
  entry: bash -n

- id: shell-check
  name: '[Shell] Lint scripts'
  description: >
    Shell scripts conform to shellcheck
    Origin: https://github.com/jumanjihouse/pre-commit-hooks#shellcheck
  language: system
  types:
    - shell
  entry: shellcheck
  args:
    - --exclude=SC1091

- id: shell-script-must-have-extension
  name: '[Shell] Non-executable shell script filename ends in .sh'
  description: Non-executable shell script filename ends in .sh
  entry: pre_commit_hooks/shell-script-must-have-extension
  language: script
  types: [shell, non-executable]

- id: shell-script-must-not-have-extension
  name: '[Shell] Executable shell script omits the filename extension'
  description: Executable shell script omits the filename extension
  entry: pre_commit_hooks/shell-script-must-not-have-extension
  language: script
  types: [shell, executable]

- id: shell-bashate
  name: '[Shell] Lint scripts'
  description: >
    This hook runs bashate for linting shell scripts.
    Origin: https://github.com/openstack/bashate
  language: python
  additional_dependencies:
    - bashate
  types:
    - shell
  entry: bashate

- id: shell-beautysh
  name: '[Shell] Format scripts'
  description: >
    This hook runs beautysh for beautifying shell scripts.
    Origin: https://github.com/lovesegfault/beautysh
  language: python
  additional_dependencies:
    - beautysh
  types:
    - shell
  entry: beautysh

##########
##########
## Toml ##
##########
##########

- id: toml-check-syntax
  name: '[Toml] Check syntax'
  description: >
    This hook checks toml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  additional_dependencies:
    - toml
  types:
    - toml
  entry: toml-check-syntax

#########
#########
## Xml ##
#########
#########

- id: xml-check-syntax
  name: '[Xml] Check syntax'
  description: >
    This hook checks xml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - xml
  entry: xml-check-syntax

##########
##########
## Yaml ##
##########
##########

- id: yaml-check-syntax
  name: '[Yaml] Check syntax'
  description: >
    This hook checks yaml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  additional_dependencies:
    - ruamel.yaml
  types:
    - yaml
  entry: yaml-check-syntax --unsafe

- id: yaml-yamllint
  name: '[Yaml] Lint files'
  description: >
    This hook runs yamllint.
    Origin: https://github.com/adrienverge/yamllint
  language: python
  additional_dependencies:
    - yamllint
  types:
    - yaml
  entry: yamllint


#########
#########
## C++ ##
#########
#########

- id: c-clang-format
  name: '[C] Clang format'
  description: >
    This hook fix clang format.
    Origin: https://clang.llvm.org/
  entry: clang-format
  language: python
  'types_or': [c++, c, c#, cuda, java, javascript, objective-c, proto]
  args: ["-style=file", "-i"]
  require_serial: false
  additional_dependencies: []
  minimum_pre_commit_version: '2.9.2'

###########
###########
## CMake ##
###########
###########

- id: cmake-format
  name: cmake-format
  description: '[CMake] cmake-format'
  entry: cmake-format
  args: [--in-place]
  language: python
  types: [cmake]

- id: cmake-lint
  name: cmake-lint
  description: '[CMake] cmake-lint'
  entry: cmake-lint
  language: python
  types: [cmake]
