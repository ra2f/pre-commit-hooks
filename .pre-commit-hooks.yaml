---
# This file tells https://pre-commit.com/
# which hooks are provided by this repo
# for use by other git repos.

#############
#############
## Ansible ##
#############
#############
- id: ansible-lint
  name: Ansible-lint
  description: '[Ansible] Ansible linter'
  entry: python3 -m ansiblelint -v --force-color
  language: python
  pass_filenames: false
  always_run: true

###########
###########
## CMake ##
###########
###########
- id: cmake-format
  name: cmake-format
  description: '[CMake] cmake-format'
  entry: cmake-format
  args: [--in-place]
  language: python
  types: [cmake]

- id: cmake-lint
  name: cmake-lint
  description: '[CMake] cmake-lint'
  entry: cmake-lint
  language: python
  types: [cmake]

###########
###########
## C/C++ ##
###########
###########
- id: c-clang-format
  name: '[C] Clang format'
  description: >
    This hook fix clang format.
    Origin: https://clang.llvm.org/
  entry: clang-format
  language: python
  'types_or': [c++, c, c#, cuda, java, javascript, objective-c, proto]
  args: ["-style=file", "-i"]
  require_serial: false

#############
#############
## Generic ##
#############
#############
- id: generic-check-case-conflict
  name: '[Generic] Forbid for case conflicts'
  description: >
    Check for files that would conflict in case-insensitive filesystems
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: generic-check-case-conflict

- id: generic-check-executables-have-shebangs
  name: '[Generic] Ensure shebangs for exec files'
  description: >
    Ensures that (non-binary) executables have a shebang.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
    - executable
  entry: generic-check-shebang-scripts-are-executable

- id: generic-check-shebang-scripts-are-executable
  name: '[Generic] check that scripts with shebangs are executable'
  description: >
    ensures that (non-binary) files with a shebang are executable.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-check-shebang-scripts-are-executable

- id: generic-check-symlinks
  name: '[Generic] Forbid broken symlinks'
  description: >
    Checks for symlinks which do not point to anything.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - symlink
  entry: generic-check-symlinks

- id: generic-detect-private-key
  name: '[Generic] Forbid private keys'
  description: >
    Detects the presence of private keys
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-detect-private-key

- id: generic-end-of-file-fixer
  name: '[Generic] Fix end-of-files'
  description: >
    Ensures that a file is either empty, or ends with one newline.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-end-of-file-fixer

- id: generic-fix-byte-order-marker
  name: '[Generic] Fix byte-order marker'
  description: >
    Fix files which have a UTF-8 byte-order marker
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-fix-byte-order-marker

- id: generic-mixed-line-ending
  name: '[Generic] Format all end-lines with LF'
  description: >
    Format files containing CRLF/CR end-lines to LF
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-mixed-line-ending
  args:
    - --fix=lf

- id: generic-tabs-forbid
  name: '[Generic] Forbid tabs'
  description: >
    Forbid files containing tabs to be committed
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: python
  exclude: (.*Makefile.*|debian/rules(\.in)?|.git/COMMIT_EDITMSG)
  types:
    - text
  entry: generic-tabs-forbid

- id: generic-tabs-remove
  name: '[Generic] Remove tabs'
  description: >
    Replace tabs by whitespaces before committing
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: python
  exclude: (.*Makefile.*|debian/rules(\.in)?|.git/COMMIT_EDITMSG)
  types:
    - text
  entry: generic-tabs-remove
  args:
    - --whitespaces-count=4

- id: generic-trailing-whitespace-fixer
  name: '[Generic] Trim trailing whitespace'
  description: >
    This hook trims trailing whitespace.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-trailing-whitespace-fixer
  args: [--markdown-linebreak-ext=md]

#########
#########
## Git ##
#########
#########
- id: git-check-added-large-files
  name: '[Git] Forbid large files'
  description: >
    Prevent large files from being committed
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  entry: git-check-added-large-files
  args:
    - --maxkb=500

- id: git-check-mailmap
  name: '[Git] Check mailmap'
  description: >
    Detect if an email address needs to be added to mailmap
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  always_run: true
  exclude: .*
  language: script
  entry: pre_commit_hooks/git-check-mailmap

- id: git-check-merge-conflict
  name: '[Git] Forbid merge conflicts'
  description: >
    Check for files that contain merge conflict strings.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: git-check-merge-conflict

- id: git-commit-msg
  name: '[Git] Check the commit message formatting'
  description: >
    Make sure the commit messages matches the expected format.
  language: python
  always_run: true
  entry: git-commit-msg
  stages:
    - commit-msg

- id: git-forbid-binary
  name: '[Git] Forbid binaries'
  description: Forbid binary files from being committed
  entry: pre_commit_hooks/git-forbid-binary
  language: script
  types: ['binary']

##########
##########
## JSON ##
##########
##########
- id: json-check-syntax
  name: '[Json] Check syntax'
  description: >
    This hook checks json files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - json
  entry: json-check-syntax

- id: json-pretty-format
  name: '[Json] Pretty format'
  description: >
    This hook sets a standard for formatting JSON files.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - json
  entry: json-pretty-format --autofix
  args:
    - --indent=2

############
############
## Python ##
############
############
- id: python-check-ast
  name: '[Python] Check python ast'
  description: >
    Simply check whether files parse as valid python.
  language: python
  types:
    - python
  entry: python-check-ast

- id: python-check-builtin-literals
  name: '[Python] Check builtin type constr use'
  description: >
    Require literal syntax when initializing empty or zero Python builtin types.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-check-builtin-literals

- id: python-check-docstring-first
  name: '[Python] Check docstring is first'
  description: >
    Checks a common error of defining a docstring after code.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-check-docstring-first

- id: python-debug-statements
  name: '[Python] Forbid debug statements'
  description: >
    Check for debugger imports and py37+ `breakpoint()` calls in python source.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-debug-statement-hook

- id: python-double-quote-string-fixer
  name: '[Python] Fix double quoted strings'
  description: >
    This hook replaces double quoted strings with single quoted strings
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-double-quote-string-fixer

- id: python-fix-encoding-pragma
  name: '[Python] Fix python encoding pragma'
  description: >
    Remove '# -*- coding: utf-8 -*-' from the top of python files
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-fix-encoding-pragma --remove

- id: python-name-tests-test
  name: '[Python] Check tests filename'
  description: >
    Verify that test files are named correctly
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  files: (^|/)tests/.+\.py$
  entry: python-name-tests-test --pytest-test-first

- id: python-requirements-txt-fixer
  name: '[Python] Fix requirements.txt'
  description: >
    Sorts entries in requirements.txt
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  files: requirements.*\.txt$
  entry: python-requirements-txt-fixer

- id: python-pydocstyle
  name: '[Python] Run pydocstyle'
  description: >
    Run pydocstyle
    Origin: https://github.com/PyCQA/pydocstyle
  language: python
  types:
    - python
  entry: pydocstyle

- id: python-pylint-config
  name: '[Python] Demand pylint config'
  description: >
    Demand the presence of .pylintrc configuration file
  language: python
  types:
    - python
  always_run: true
  entry: python-pylint-config
  pass_filenames: false

- id: python-pylint
  name: '[Python] Run pylint'
  description: >
    Run pylint
    Origin: https://github.com/PyCQA/pylint
  language: python
  require_serial: true
  types: [python]
  entry: pylint

###########
###########
## Shell ##
###########
###########
- id: shell-check-syntax
  name: '[Shell] Check shell style with shfmt'
  description: >
    Check Shell scripts syntax correctness
    Origin: https://github.com/jumanjihouse/pre-commit-hooks#shfmt
  entry: shfmt
  language: python
  types: [shell]
  args: ['-w', '-i', '2'] # write file back
  require_serial: true # shfmt can detect sourcing this way

- id: shell-script-must-have-extension
  name: '[Shell] Non-executable shell script filename ends in .sh'
  description: >
    Non-executable shell script filename ends in .sh
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  entry: pre_commit_hooks/shell-script-must-have-extension
  language: script
  types: [shell, non-executable]

- id: shell-script-must-not-have-extension
  name: '[Shell] Executable shell script omits the filename extension'
  description: >
    Executable shell script omits the filename extension
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  entry: pre_commit_hooks/shell-script-must-not-have-extension
  language: script
  types: [shell, executable]

- id: shell-script-style
  name: '[Shell] Check scripts conform to shellcheck'
  description: >
    Shell scripts conform to shellcheck
    Origin: https://github.com/jumanjihouse/pre-commit-hooks#shellcheck
  entry: shellcheck
  language: python
  types: [shell]
  require_serial: true # shellcheck can detect sourcing this way

##########
##########
## TOML ##
##########
##########
- id: toml-check-syntax
  name: '[Toml] Check syntax'
  description: >
    This hook checks toml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - toml
  entry: toml-check-syntax

- id: toml-pretty-format
  name: '[Toml] Pretty format'
  description: >
    This hook sets a standard for formatting TOML files.
    Origin: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  language: python
  types:
    - toml
  args: [--autofix]
  entry: toml-pretty-format 

#########
#########
## XML ##
#########
#########
- id: xml-check-syntax
  name: '[Xml] Check syntax'
  description: >
    This hook checks xml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - xml
  entry: xml-check-syntax

##########
##########
## YAML ##
##########
##########
- id: yaml-check-syntax
  name: '[Yaml] Check syntax'
  description: >
    This hook checks yaml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - yaml
  entry: yaml-check-syntax --unsafe

- id: yaml-pretty-format
  name: '[Yaml] Pretty format'
  description: >
    This hook sets a standard for formatting Yaml files.
    Origin: https://jumanjihouse/pre-commit-hook-yamlfmt
  language: python
  types: [ yaml ]
  args: [--mapping, '2', --sequence, '4', --offset, '2', --width, '150', '--implicit_start', '--implicit_end', '--preserve-quotes']
  entry: yaml-pretty-format

